1. game을 저장할 때는 game_info도 저장이 되어야 한다.
2. game이름은 중복 안된다.
3. game의 타입이 많다 enum과 팩토리패턴을 적용해서 game entity를 생성
4. game은 수정이 가능하고 중복된 이름은 안된다.
5. games
    * 삭제 안된 게임만 조회 가능
    1. 조회
        1. 게임이름, 게임타입, 기기타입, 가격, 브랜드
    2. 조건
        1. 게임이름, 게임타입, 기기타입, 가격(범위), 브랜드, 등록일
    3. 정렬
        1. 게임이름, 게임타입, 기기타입, 가격, 브랜드, 등록일
    4. 삭제
        1. 삭제는 나중에 개발한다 game이 삭제되면 연관된 모든 데이터에 actYn false로 변경
6. game조회
    1. 게임이름, 게임타입(타입특성 포홈), 기기타입, 브랜드, 게임정보1, 2
    2. 게임을 조회 후 삭제 및 수정
    3. ost, map을 등록할 수 있는 화면으로 이동 가능
7. ost
    * game조회에서 넘어 온다.
    1. 조회
        1. ost 이름
    2. 조건
        1. ost 이름
    3. 정렬
        1. ost 이름
    4. 삭제
        1. ost는 ost만 삭제 가능
    5. 등록 및 수정시에 map을 등록할 수 있따.
        1. 선택된 맵에 사용되는 ost를 선택
8. map
    * game조회에서 넘어 온다.
    1. 조회
        1. map 이름
    2. 조건
        1. map 이름
    3. 정렬
        1. map 이름
    4. 삭제
        1. map을 삭제, ost에서 map_id도 null로 update
9. map 조회
    1. map에 등록된 ost를 보여준다.



